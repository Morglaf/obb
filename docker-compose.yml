version: '3.8'

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-onlinebookbrew}
      POSTGRES_USER: ${POSTGRES_USER:-bookbrew}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-bookbrewpass}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    networks:
      - onlinebookbrew

  nginx:
    image: nginx:alpine
    ports:
      - "8001:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - php-api
    restart: unless-stopped
    networks:
      - onlinebookbrew

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://obb.morglaf.com:8001/api
      - API_BASE_URL=http://php-api:8080
    depends_on:
      - php-api
    restart: unless-stopped
    networks:
      - onlinebookbrew

  php-api:
    build:
      context: .
      dockerfile: Dockerfile.php-api
    volumes:
      - ./api/public/uploads:/app/public/uploads
      - ./workspace:/app/workspace
      - ./api/typeset:/app/typeset
      - ./user_templates:/app/user_templates
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-bookbrew}:${POSTGRES_PASSWORD:-bookbrewpass}@postgres:5432/${POSTGRES_DB:-onlinebookbrew}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=${POSTGRES_DB:-onlinebookbrew}
      - DB_USER=${POSTGRES_USER:-bookbrew}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-bookbrewpass}
      - JWT_SECRET=${JWT_SECRET:-development-secret-key-change-in-production}
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - onlinebookbrew
    command: ["bash", "./start.sh"]

  processor:
    build:
      context: .
      dockerfile: Dockerfile.processor
    volumes:
      - ./workspace:/workspace
      - ./api/typeset:/typeset
      - ./api/typeset/fonts:/usr/local/share/fonts/custom
      - ./user_templates:/user_templates
    command: ["bash", "/process-commands.sh"]
    restart: unless-stopped
    depends_on:
      - postgres
    networks:
      - onlinebookbrew

volumes:
  postgres_data:

networks:
  onlinebookbrew:
    driver: bridge 