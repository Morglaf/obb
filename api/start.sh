#!/bin/bash

# Script de d√©marrage pour l'API PHP
# Ex√©cute la migration de la base de donn√©es puis d√©marre le serveur

echo "=== D√©marrage de l'API OnlineBookBrew ==="

# Attendre que PostgreSQL soit pr√™t
echo "Attente de la base de donn√©es PostgreSQL..."
until php -r "
try {
    \$pdo = new PDO('pgsql:host=' . getenv('DB_HOST') . ';port=' . getenv('DB_PORT') . ';dbname=' . getenv('DB_DATABASE'), getenv('DB_USER'), getenv('DB_PASSWORD'));
    echo 'Connexion √† PostgreSQL r√©ussie\n';
    exit(0);
} catch (Exception \$e) {
    echo 'En attente de PostgreSQL...\n';
    exit(1);
}
" 2>/dev/null; do
    sleep 2
done

echo "‚úÖ PostgreSQL est pr√™t"

# V√©rifier si les tables existent d√©j√†
echo "V√©rification de la structure de la base de donn√©es..."
php -r "
try {
    \$pdo = new PDO('pgsql:host=' . getenv('DB_HOST') . ';port=' . getenv('DB_PORT') . ';dbname=' . getenv('DB_DATABASE'), getenv('DB_USER'), getenv('DB_PASSWORD'));
    \$stmt = \$pdo->query('SELECT COUNT(*) FROM information_schema.tables WHERE table_name = \'users\'');
    \$tableExists = \$stmt->fetchColumn() > 0;
    
    if (\$tableExists) {
        echo '‚úÖ Tables d√©j√† existantes, pas besoin de migration\\n';
        exit(0);
    } else {
        echo 'üìã Tables manquantes, ex√©cution de la migration...\\n';
        exit(1);
    }
} catch (Exception \$e) {
    echo '‚ùå Erreur de v√©rification: ' . \$e->getMessage() . '\\n';
    exit(1);
}
"

if [ $? -eq 1 ]; then
    echo "Ex√©cution de la migration de la base de donn√©es..."
    php migrate-db.php
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Migration r√©ussie"
    else
        echo "‚ö†Ô∏è Migration √©chou√©e, mais on continue..."
    fi
else
    echo "‚úÖ Base de donn√©es d√©j√† initialis√©e"
fi

# D√©marrer le serveur PHP
echo "D√©marrage du serveur PHP..."
exec php -S 0.0.0.0:8080 -t public router.php 